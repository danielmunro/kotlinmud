package kotlinmud.action.impl

import assertk.assertThat
import assertk.assertions.isEqualTo
import kotlinmud.io.type.IOStatus
import kotlinmud.room.type.DoorDisposition
import kotlinmud.test.helper.createTestService
import org.junit.Test

class OpenTest {
    @Test
    fun testCanOpenDoors() {
        // setup
        val testService = createTestService()

        // given
        val room = testService.getStartRoom()
        room.northDoor = testService.createDoor()
        room.northDoor!!.disposition = DoorDisposition.CLOSED

        // when
        val response = testService.runAction("open door")

        // then
        assertThat(response.message.toActionCreator).isEqualTo("you open ${room.northDoor}.")
        assertThat(response.status).isEqualTo(IOStatus.OK)
    }

    @Test
    fun testCannotOpenDoorsThatAreOpen() {
        // setup
        val testService = createTestService()
        val room = testService.getStartRoom()

        // given
        val door = testService.createDoor()
        room.northDoor = door
        door.disposition = DoorDisposition.OPEN

        // when
        val response = testService.runAction("open door")

        // then
        assertThat(response.message.toActionCreator).isEqualTo("it is already open.")
        assertThat(response.status).isEqualTo(IOStatus.ERROR)
    }

    @Test
    fun testCannotOpenDoorsThatAreLocked() {
        // setup
        val testService = createTestService()
        val room = testService.getStartRoom()

        // given
        val door = testService.createDoor()
        room.northDoor = door
        door.disposition = DoorDisposition.LOCKED

        // when
        val response = testService.runAction("open door")

        // then
        assertThat(response.message.toActionCreator).isEqualTo("it is locked.")
        assertThat(response.status).isEqualTo(IOStatus.ERROR)
    }

    @Test
    fun testCannotOpenDoorThatDoesNotExist() {
        // setup
        val testService = createTestService()

        // when
        val response = testService.runAction("open grate")

        // then
        assertThat(response.message.toActionCreator).isEqualTo("you don't see that anywhere.")
        assertThat(response.status).isEqualTo(IOStatus.ERROR)
    }
}
